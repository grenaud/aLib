==========================================================
  Likelihood-based demultiplexing for next-generation sequencing
==========================================================


INSTALLATION INSTRUCTIONS:
Read the main readme file (README.md). If certain submodules fail to build it is fine as long as you built the ones in pipeline/ correctly.

RUNNING THE PROGRAM:
To launch the program simply build the aLib package and type:

    pipeline/assignRG


TEST DATA:

TO ADD

To launch the demultiplexing program for this test data set, use the following command :

    pipeline/assignRG -i testData/index.txt -o testData/demultiplexed.bam testData/todemultiplex.bam

The demultiplexed data will be in 

    testData/todemultiplex.bam


Running on fastq input:

    The input of the demultiplexing program is a BAM file where the index is specified as the XI extra field for each read or, in the case of double indexed files, the second index is in the XJ field. 

    For paired-end data, transform to BAM:
      fastq2bam/fastq2bam

    For single-end data, transform to BAM:
      fastq2bam/fastSingle2bam

    If the sequences of the index or indices were specified in the defline, consider using either the -si or -di options. This will detect the index or indices and put them as the XI/XJ fields. 

    You can always pipe to avoid creating an extra BAM file:
    fastq2bam/fastq2bam -o /dev/stdout input.f1.gz  input.f2.gz |  pipeline/assignRG

    The problem with this approach is that you loose all quality information as Illumina (as of this writing) does not normally provide 
    the quality scores using their bcl2fastq tool. An alternative is to use the bcl2bam tool provided with this package:
  
    BCL2BAM/bcl2bam

    The one disadvantage is that the precise number of cycles for the forward/reverse/index has to be provided but the quality scores 
   for the indices should be correct
 

QUESTIONS :
   gabriel[dot]reno[ at sign ]gmail.com

    



